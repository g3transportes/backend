// <auto-generated />
using System;
using G3Transportes.WebApi.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace G3Transportes.WebApi.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20200731090548_20200731_Estoque")]
    partial class _20200731_Estoque
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("G3Transportes.WebApi.Models.Anexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Anexo");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Caminhao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Capacidade")
                        .HasColumnType("double(12,2)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int?>("IdMotorista")
                        .HasColumnType("int");

                    b.Property<int?>("IdProprietario")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Placa")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Placa2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Placa3")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Placa4")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Renavam")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Renavam2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Renavam3")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Renavam4")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdMotorista");

                    b.HasIndex("IdProprietario");

                    b.ToTable("Caminhao");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.CaminhaoAnexo", b =>
                {
                    b.Property<int>("IdCaminhao")
                        .HasColumnType("int");

                    b.Property<int>("IdAnexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdCaminhao", "IdAnexo");

                    b.HasIndex("IdAnexo");

                    b.ToTable("CaminhaoAnexo");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.CentroCusto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<bool>("Padrao")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Referencia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("CentroCusto");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BancoAgencia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoConta")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoDocumento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoNome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoOperacao")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoTitular")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Contato")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndBairro")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCep")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCidade")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndComplemento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndEstado")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndNumero")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndRua")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.ClienteAnexo", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdAnexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdCliente", "IdAnexo");

                    b.HasIndex("IdAnexo");

                    b.ToTable("ClienteAnexo");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Configuracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contato")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndBairro")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCep")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCidade")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndComplemento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndEstado")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndNumero")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndRua")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Logomarca")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("SmtpHost")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("SmtpPorta")
                        .HasColumnType("int");

                    b.Property<bool>("SmtpSSL")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SmtpSenha")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("SmtpUsuario")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Configuracao");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.ContaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Agencia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Banco")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Conta")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<double>("Creditos")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("Debitos")
                        .HasColumnType("double(12,2)");

                    b.Property<string>("Documento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("Operacao")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<double>("SaldoAtual")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("SaldoInicial")
                        .HasColumnType("double(12,2)");

                    b.Property<string>("Titular")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ContaBancaria");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("FormaPagamento");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Lancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Baixado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BancoAgencia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoConta")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoDocumento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoNome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoOperacao")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoTitular")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("DataBaixa")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Favorecido")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int?>("IdCaminhao")
                        .HasColumnType("int");

                    b.Property<int?>("IdCentroCusto")
                        .HasColumnType("int");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdContaBancaria")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDocumento")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.Property<double>("ValorAcrescimo")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorBaixado")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorBruto")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorDesconto")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorLiquido")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorSaldo")
                        .HasColumnType("double(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCaminhao");

                    b.HasIndex("IdCentroCusto");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdContaBancaria");

                    b.HasIndex("IdFormaPagamento");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("Lancamento");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.LancamentoAnexo", b =>
                {
                    b.Property<int>("IdLancamento")
                        .HasColumnType("int");

                    b.Property<int>("IdAnexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdLancamento", "IdAnexo");

                    b.HasIndex("IdAnexo");

                    b.ToTable("LancamentoAnexo");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.LancamentoBaixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdContaBancaria")
                        .HasColumnType("int");

                    b.Property<int?>("IdFormaPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdLancamento")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Valor")
                        .HasColumnType("double(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdContaBancaria");

                    b.HasIndex("IdFormaPagamento");

                    b.HasIndex("IdLancamento");

                    b.ToTable("LancamentoBaixa");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Motorista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BancoAgencia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoConta")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoDocumento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoNome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoOperacao")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoTitular")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Categoria")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("DataHabilitacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Documento1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento3")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndBairro")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCep")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCidade")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndComplemento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndEstado")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndNumero")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndRua")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("Telefone1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone3")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.MotoristaAnexo", b =>
                {
                    b.Property<int>("IdMotorista")
                        .HasColumnType("int");

                    b.Property<int>("IdAnexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdMotorista", "IdAnexo");

                    b.HasIndex("IdAnexo");

                    b.ToTable("MotoristaAnexo");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CTe")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<bool>("Coletado")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("ComissaoMargem")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ComissaoUnitario")
                        .HasColumnType("double(12,2)");

                    b.Property<DateTime?>("DataColeta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataFinalizado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Destinatario")
                        .HasColumnType("text");

                    b.Property<bool>("Entregue")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Finalizado")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("FreteUnitario")
                        .HasColumnType("double(12,2)");

                    b.Property<int?>("IdCaminhao")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdRemetente")
                        .HasColumnType("int");

                    b.Property<string>("LocalColeta")
                        .HasColumnType("text");

                    b.Property<string>("NFe")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("NumPedido")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("OrdemServico")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<bool>("Pago")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Paletes")
                        .HasColumnType("int");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorAcrescimo")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorBruto")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorComissao")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorDesconto")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorFrete")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorLiquido")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorPedagio")
                        .HasColumnType("double(12,2)");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("double(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCaminhao");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdRemetente");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.PedidoAnexo", b =>
                {
                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdAnexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdPedido", "IdAnexo");

                    b.HasIndex("IdAnexo");

                    b.ToTable("PedidoAnexo");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Proprietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Antt")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("AnttData")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BancoAgencia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoConta")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoDocumento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoNome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoOperacao")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoTitular")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndBairro")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCep")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCidade")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndComplemento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndEstado")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndNumero")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndRua")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Filiacao")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("Pis")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Proprietario");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.ProprietarioAnexo", b =>
                {
                    b.Property<int>("IdProprietario")
                        .HasColumnType("int");

                    b.Property<int>("IdAnexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdProprietario", "IdAnexo");

                    b.HasIndex("IdAnexo");

                    b.ToTable("ProprietarioAnexo");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Remetente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BancoAgencia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoConta")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoDocumento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoNome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoOperacao")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("BancoTitular")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Contato")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Documento2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndBairro")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCep")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndCidade")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndComplemento")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndEstado")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndNumero")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("EndRua")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("EstoqueAtual")
                        .HasColumnType("int");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone1")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Telefone2")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Remetente");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.RemetenteAnexo", b =>
                {
                    b.Property<int>("IdRemetente")
                        .HasColumnType("int");

                    b.Property<int>("IdAnexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdRemetente", "IdAnexo");

                    b.HasIndex("IdAnexo");

                    b.ToTable("RemetenteAnexo");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.RemetenteEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int?>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdRemetente")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.Property<bool>("Transferencia")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Usuario")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdRemetente");

                    b.ToTable("RemetenteEstoque");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Caminhao", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Motorista", "Motorista")
                        .WithMany("Caminhoes")
                        .HasForeignKey("IdMotorista")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.Proprietario", "Proprietario")
                        .WithMany("Caminhoes")
                        .HasForeignKey("IdProprietario")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.CaminhaoAnexo", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Anexo", "Anexo")
                        .WithMany("Caminhoes")
                        .HasForeignKey("IdAnexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Caminhao", "Caminhao")
                        .WithMany("Anexos")
                        .HasForeignKey("IdCaminhao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.ClienteAnexo", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Anexo", "Anexo")
                        .WithMany("Clientes")
                        .HasForeignKey("IdAnexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Cliente", "Cliente")
                        .WithMany("Anexos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Lancamento", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Caminhao", "Caminhao")
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdCaminhao")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.CentroCusto", "CentroCusto")
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdCentroCusto")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.Cliente", "Cliente")
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.ContaBancaria", "ContaBancaria")
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdContaBancaria")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.FormaPagamento", "FormaPagamento")
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdFormaPagamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Pedido", "Pedido")
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.TipoDocumento", "TipoDocumento")
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.LancamentoAnexo", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Anexo", "Anexo")
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdAnexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Lancamento", "Lancamento")
                        .WithMany("Anexos")
                        .HasForeignKey("IdLancamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.LancamentoBaixa", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.ContaBancaria", "ContaBancaria")
                        .WithMany("Baixas")
                        .HasForeignKey("IdContaBancaria")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.FormaPagamento", "FormaPagamento")
                        .WithMany("Baixas")
                        .HasForeignKey("IdFormaPagamento")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.Lancamento", "Lancamento")
                        .WithMany("Baixas")
                        .HasForeignKey("IdLancamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.MotoristaAnexo", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Anexo", "Anexo")
                        .WithMany("Motoristas")
                        .HasForeignKey("IdAnexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Motorista", "Motorista")
                        .WithMany("Anexos")
                        .HasForeignKey("IdMotorista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.Pedido", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Caminhao", "Caminhao")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCaminhao")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("G3Transportes.WebApi.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Remetente", "Remetente")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdRemetente")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.PedidoAnexo", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Anexo", "Anexo")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdAnexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Pedido", "Pedido")
                        .WithMany("Anexos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.ProprietarioAnexo", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Anexo", "Anexo")
                        .WithMany("Proprietarios")
                        .HasForeignKey("IdAnexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Proprietario", "Proprietario")
                        .WithMany("Anexos")
                        .HasForeignKey("IdProprietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.RemetenteAnexo", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Anexo", "Anexo")
                        .WithMany("Remetentes")
                        .HasForeignKey("IdAnexo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G3Transportes.WebApi.Models.Remetente", "Remetente")
                        .WithMany("Anexos")
                        .HasForeignKey("IdRemetente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G3Transportes.WebApi.Models.RemetenteEstoque", b =>
                {
                    b.HasOne("G3Transportes.WebApi.Models.Pedido", "Pedido")
                        .WithMany("Estoques")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("G3Transportes.WebApi.Models.Remetente", "Remetente")
                        .WithMany("Estoques")
                        .HasForeignKey("IdRemetente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
